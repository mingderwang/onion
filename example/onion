#! /bin/bash
set -e
#set -o xtrace
LOGFILE=/var/log/onion.log

PIDFILE='/usr/local/var/run/onion'

start() {
while ps -ef | grep 'onion serve' | grep -v 'grep'; do
echo "onion is already running\n"
return;
done;
echo "Starting onion\n"
cd /opt/go/src/github.com/mingderwang/onion
su mwang -c '/opt/go/bin/onion serve' >> $LOGFILE 2>&1 &
timeout=30
while ps -ef | grep 'onion serve' | grep -v 'grep'; do
echo -n '>'
aa=`ps -ef | grep "onion serve" | grep -v 'grep' | awk '{print $2}' | tr -d ','`
echo $aa
for i in $aa
do
echo $i > $PIDFILE 
timeout=0
done
timeout=$((timeout-1))
if [ $timeout -lt '1' ]; then return; fi
sleep 1
done;
}

stop() {
echo -n "Shutting down onion\n"
if [ -f $PIDFILE ]; then
echo "[pidfile exist]"
kill -9 $(cat $PIDFILE)
else
echo "[pidfile does not exist]"
aa=`ps -ef | grep "onion serve" | grep -v 'grep' | awk '{print $2}' | tr -d ','`
kill -9 $aa 
fi
if [ -f $PIDFILE ]; then
rm $PIDFILE
fi
}

restart() {
stop
timeout=30
while ps -ef | grep 'onion serve' | grep -v 'grep'; do
echo -n '.'
stop
timeout=$((timeout-1))
if [ $timeout -lt '1' ]; then return; fi
sleep 1
done;
start
}

case "$1" in
start)
start
;;
stop)
stop
;;
restart)
restart
;;
status)
if [ -f $PIDFILE ]; then
echo "[onion is running]"
else
echo "[onion is not running]"
fi
;;
*)
echo "Usage: $0 {start|stop|restart|status}"
exit 1
esac
exit 0
